{"ast":null,"code":"import { PUPPY_LIST_REQUEST, PUPPY_LIST_SUCCESS, PUPPY_LIST_FAIL, PUPPY_DETAILS_REQUEST, PUPPY_DETAILS_SUCCESS, PUPPY_DETAILS_FAIL, PUPPY_SAVE_REQUEST, PUPPY_SAVE_SUCCESS, PUPPY_SAVE_FAIL, PUPPY_DELETE_SUCCESS, PUPPY_DELETE_FAIL, PUPPY_DELETE_REQUEST } from \"../constants/puppyConstants\";\nimport axios from 'axios';\nimport Axios from \"axios\";\n\nconst listPuppies = (category = '', searchKeyword = '', sortOrder = '') => async dispatch => {\n  try {\n    dispatch({\n      type: PUPPY_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/puppies?category=\" + category + \"&searchKeyword=\" + searchKeyword + \"&sortOrder=\" + sortOrder);\n    dispatch({\n      type: PUPPY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PUPPY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst savePuppy = puppy => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PUPPY_SAVE_REQUEST,\n      payload: puppy\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!puppy._id) {\n      const {\n        data\n      } = await Axios.post('/api/puppies', puppy, {\n        headers: {\n          'Authorization': 'Dean ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PUPPY_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/puppies/' + puppy._id, puppy, {\n        headers: {\n          'Authorization': 'Dean ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PUPPY_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PUPPY_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsPuppy = puppyId => async dispatch => {\n  try {\n    dispatch({\n      type: PUPPY_DETAILS_REQUEST,\n      payload: puppyId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/puppies/\" + puppyId);\n    dispatch({\n      type: PUPPY_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PUPPY_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deletePuppy = puppyId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PUPPY_DELETE_REQUEST,\n      payload: puppyId\n    });\n    const {\n      data\n    } = await axios.delete(\"/api/puppies/\" + puppyId, {\n      headers: {\n        Authorization: 'Dean ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PUPPY_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PUPPY_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listPuppies, detailsPuppy, savePuppy, deletePuppy };","map":{"version":3,"sources":["/Users/deankrotzer/Desktop/Github/Homeraisedcairns/homeraisedcairns/src/actions/puppyActions.js"],"names":["PUPPY_LIST_REQUEST","PUPPY_LIST_SUCCESS","PUPPY_LIST_FAIL","PUPPY_DETAILS_REQUEST","PUPPY_DETAILS_SUCCESS","PUPPY_DETAILS_FAIL","PUPPY_SAVE_REQUEST","PUPPY_SAVE_SUCCESS","PUPPY_SAVE_FAIL","PUPPY_DELETE_SUCCESS","PUPPY_DELETE_FAIL","PUPPY_DELETE_REQUEST","axios","Axios","listPuppies","category","searchKeyword","sortOrder","dispatch","type","data","get","payload","error","message","savePuppy","puppy","getState","userSignin","userInfo","_id","post","headers","token","put","detailsPuppy","puppyId","deletePuppy","delete","Authorization","success"],"mappings":"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","sourcesContent":["import {\n    PUPPY_LIST_REQUEST, PUPPY_LIST_SUCCESS, PUPPY_LIST_FAIL,\n    PUPPY_DETAILS_REQUEST, PUPPY_DETAILS_SUCCESS, PUPPY_DETAILS_FAIL, PUPPY_SAVE_REQUEST, PUPPY_SAVE_SUCCESS, PUPPY_SAVE_FAIL, PUPPY_DELETE_SUCCESS, PUPPY_DELETE_FAIL, PUPPY_DELETE_REQUEST\n  } from \"../constants/puppyConstants\"\n  import axios from 'axios';\n  import Axios from \"axios\";\n  \n  const listPuppies = (category = '', searchKeyword = '', sortOrder = '') => async (dispatch) => {\n    try {\n  \n      dispatch({ type: PUPPY_LIST_REQUEST });\n      const { data } = await axios.get(\"/api/puppies?category=\" + category +\n        \"&searchKeyword=\" + searchKeyword + \"&sortOrder=\" + sortOrder);\n      dispatch({ type: PUPPY_LIST_SUCCESS, payload: data });\n    }\n    catch (error) {\n  \n      dispatch({ type: PUPPY_LIST_FAIL, payload: error.message });\n    }\n  }\n  \n  const savePuppy = (puppy) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: PUPPY_SAVE_REQUEST, payload: puppy });\n      const { userSignin: { userInfo } } = getState();\n      if (!puppy._id) {\n        const { data } = await Axios.post('/api/puppies', puppy, {\n          headers: {\n            'Authorization': 'Dean ' + userInfo.token\n          }\n        });\n        dispatch({ type: PUPPY_SAVE_SUCCESS, payload: data });\n      } else {\n        const { data } = await Axios.put('/api/puppies/' + puppy._id, puppy, {\n          headers: {\n            'Authorization': 'Dean ' + userInfo.token\n          }\n        });\n        dispatch({ type: PUPPY_SAVE_SUCCESS, payload: data });\n      }\n  \n    } catch (error) {\n  \n      dispatch({ type: PUPPY_SAVE_FAIL, payload: error.message });\n    }\n  }\n  \n  const detailsPuppy = (puppyId) => async (dispatch) => {\n    try {\n      dispatch({ type: PUPPY_DETAILS_REQUEST, payload: puppyId });\n      const { data } = await axios.get(\"/api/puppies/\" + puppyId);\n      dispatch({ type: PUPPY_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: PUPPY_DETAILS_FAIL, payload: error.message });\n  \n    }\n  }\n  \n  const deletePuppy = (puppyId) => async (dispatch, getState) => {\n    try {\n      const { userSignin: { userInfo } } = getState();\n      dispatch({ type: PUPPY_DELETE_REQUEST, payload: puppyId });\n      const { data } = await axios.delete(\"/api/puppies/\" + puppyId, {\n        headers: {\n          Authorization: 'Dean ' + userInfo.token\n        }\n      });\n      dispatch({ type: PUPPY_DELETE_SUCCESS, payload: data, success: true });\n    } catch (error) {\n      dispatch({ type: PUPPY_DELETE_FAIL, payload: error.message });\n  \n    }\n  }\n  \n  export { listPuppies, detailsPuppy, savePuppy, deletePuppy }"]},"metadata":{},"sourceType":"module"}