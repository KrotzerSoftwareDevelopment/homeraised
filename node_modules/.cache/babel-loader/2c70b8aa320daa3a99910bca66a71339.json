{"ast":null,"code":"import _slicedToArray from\"/Users/deankrotzer/Desktop/Github/Homeraisedcairns/homeraisedcairns/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{logout,update}from'../actions/userActions';// import { listMyOrders } from '../actions/orderActions';\nimport{useDispatch,useSelector}from'react-redux';import{Nav,Col,Row,Tab}from'react-bootstrap';import'../App.css';var ProfilePage=function ProfilePage(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var dispatch=useDispatch();var userSignin=useSelector(function(state){return state.userSignin;});var userInfo=userSignin.userInfo;var handleLogout=function handleLogout(){dispatch(logout());props.history.push(\"/signin\");};var submitHandler=function submitHandler(e){e.preventDefault();dispatch(update({userId:userInfo._id,email:email,name:name,password:password}));};var userUpdate=useSelector(function(state){return state.userUpdate;});var loading=userUpdate.loading,success=userUpdate.success,error=userUpdate.error;// const myOrderList = useSelector(state => state.myOrderList);\n// const { loading: loadingOrders, orders, error: errorOrders } = myOrderList;\nuseEffect(function(){if(userInfo){console.log(userInfo.name);setEmail(userInfo.email);setName(userInfo.name);setPassword(userInfo.password);}// dispatch(listMyOrders());\nreturn function(){};},[userInfo]);return/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(\"div\",{className:\"homePageCardContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:submitHandler},/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(\"h1\",null,\" Dashboard \"),loading&&/*#__PURE__*/React.createElement(\"div\",null,\"Loading...\"),error&&/*#__PURE__*/React.createElement(\"div\",null,error),success&&/*#__PURE__*/React.createElement(\"div\",null,\"Profile Saved Successfully.\"),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},/*#__PURE__*/React.createElement(\"br\",null),\"Name\"),/*#__PURE__*/React.createElement(\"input\",{value:name,type:\"name\",name:\"name\",id:\"name\",onChange:function onChange(e){return setName(e.target.value);}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(\"input\",{value:email,type:\"email\",name:\"email\",id:\"email\",onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{value:password,type:\"password\",id:\"password\",name:\"password\",onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",id:\"submitbutton\",className:\"button primary\"},\"Update\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",id:\"submitbutton\",onClick:handleLogout,className:\"button secondary full-width\"},\"Logout\"))))))));};export default ProfilePage;/*\n  <div className=\"profile-orders content-margined\">\n      {\n        loadingOrders ? <div>Loading...</div> :\n          errorOrders ? <div>{errorOrders} </div> :\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>DATE</th>\n                  <th>TOTAL</th>\n                  <th>PAID</th>\n                  <th>ACTIONS</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* {orders.map(order => <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>{order.isPaid}</td>\n                  <td>\n                    <Link to={\"/order/\" + order._id}>DETAILS</Link>\n                  </td>\n                </tr>)} \n                </tbody>\n                </table>\n          }\n        </div>\n\n*/","map":{"version":3,"sources":["/Users/deankrotzer/Desktop/Github/Homeraisedcairns/homeraisedcairns/src/pages/ProfilePage.js"],"names":["React","useState","useEffect","Link","logout","update","useDispatch","useSelector","Nav","Col","Row","Tab","ProfilePage","props","name","setName","password","setPassword","email","setEmail","dispatch","userSignin","state","userInfo","handleLogout","history","push","submitHandler","e","preventDefault","userId","_id","userUpdate","loading","success","error","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { logout, update } from '../actions/userActions';\n// import { listMyOrders } from '../actions/orderActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nav, Col, Row, Tab } from 'react-bootstrap';\nimport '../App.css';\nconst ProfilePage = (props) => {\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const dispatch = useDispatch();\n  const userSignin = useSelector(state => state.userSignin);\n  const { userInfo } = userSignin;\n  const handleLogout = () => {\n    dispatch(logout());\n    props.history.push(\"/signin\");\n  }\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(update({ userId: userInfo._id, email, name, password }))\n  }\n  const userUpdate = useSelector(state => state.userUpdate);\n  const { loading, success, error } = userUpdate;\n\n  // const myOrderList = useSelector(state => state.myOrderList);\n  // const { loading: loadingOrders, orders, error: errorOrders } = myOrderList;\n  useEffect(() => {\n    if (userInfo) {\n      console.log(userInfo.name)\n      setEmail(userInfo.email);\n      setName(userInfo.name);\n      setPassword(userInfo.password);\n    }\n    // dispatch(listMyOrders());\n    return () => {\n\n    };\n  }, [userInfo])\n\n  return <div className=\"\">\n    <div className=\"homePageCardContainer\">\n      <div className=\"\">\n        <form onSubmit={submitHandler} >\n          <div className=\"\">\n         \n              <h1> Dashboard </h1>\n        \n              {loading && <div>Loading...</div>}\n              {error && <div>{error}</div>}\n              {success && <div>Profile Saved Successfully.</div>}\n             <label htmlFor=\"name\">\n               <br />\n                Name\n          </label>\n              <input value={name} type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}>\n              </input>\n          <br />\n              <label htmlFor=\"email\">\n                Email\n          </label>\n              <input value={email} type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}>\n              </input>\n           <br />\n              <label htmlFor=\"password\">Password</label>\n              <input value={password} type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}>\n              </input>\n           <br />\n           <Row>\n              <Col>\n              <button type=\"submit\" id=\"submitbutton\" className=\"button primary\">Update</button>\n              </Col>\n          <br />\n       <Col>\n              <button type=\"button\" id=\"submitbutton\" onClick={handleLogout} className=\"button secondary full-width\">Logout</button>\n              </Col>\n              </Row>\n\n          </div>\n        </form>\n      </div>\n    </div>\n  \n  </div>\n}\n\nexport default ProfilePage;\n\n/*\n  <div className=\"profile-orders content-margined\">\n      {\n        loadingOrders ? <div>Loading...</div> :\n          errorOrders ? <div>{errorOrders} </div> :\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>DATE</th>\n                  <th>TOTAL</th>\n                  <th>PAID</th>\n                  <th>ACTIONS</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* {orders.map(order => <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>{order.isPaid}</td>\n                  <td>\n                    <Link to={\"/order/\" + order._id}>DETAILS</Link>\n                  </td>\n                </tr>)} \n                </tbody>\n                </table>\n          }\n        </div>\n\n*/"]},"metadata":{},"sourceType":"module"}